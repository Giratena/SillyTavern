{"user_name":"Gira","character_name":"Coding Sensei","create_date":"2024-6-21@16h57m23s","chat_metadata":{"chat_id_hash":4195252783599034,"note_prompt":"","note_interval":1,"note_position":1,"note_depth":4,"note_role":0,"tainted":true}}
{"name":"Coding Sensei","is_user":false,"is_system":false,"send_date":"June 21, 2024 4:57pm","mes":"\"Hello world!\" \r\n\r\nIn JavaScript that looks like:\r\n\r\n```\r\nfunction HelloWorld() {\r\n    console.log(\"Hello World!\");\r\n}\r\nHelloWorld();\r\n```","extra":{}}
{"name":"Gira","is_user":true,"is_system":false,"send_date":"June 21, 2024 4:57pm","mes":"import { activateKeepAwakeAsync, deactivateKeepAwake } from 'expo-keep-awake';\nimport { useRouter } from 'expo-router';\nimport * as Sharing from 'expo-sharing';\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { LayoutChangeEvent, ScrollView, StyleSheet, View } from 'react-native';\nimport { Button, Divider, FAB, Menu } from 'react-native-paper';\nimport Toast from 'react-native-root-toast';\nimport { captureRef } from 'react-native-view-shot';\nimport { Text } from '@/components/Text';\n\nimport PlusIcon from '@/assets/images/icons/plus-large.svg';\nimport Tractor from '@/assets/images/icons/tractor.svg';\nimport Trailer from '@/assets/images/icons/trailer.svg';\nimport TruckCustom from '@/assets/images/icons/truck-custom.svg';\nimport LoadLimitPopupModal from '@/components/LoadLimitPopupModal';\nimport ObjectCard from '@/components/ObjectCard';\nimport ObjectItem from '@/components/ObjectItem';\nimport ScreenshotLayout from '@/components/ScreenshotLayout';\nimport ThemedModal from '@/components/ThemedModal';\nimport WeightCard from '@/components/WeightCard';\nimport type { Props as ItemType } from '@/components/details/DetailsLinkItem';\nimport ExpandableListOfLinks from '@/components/details/ExpandableListOfLinks';\nimport { useAppTheme } from '@/constants/Theme';\nimport { ObjectType } from '@/enums/ObjectType';\nimport { calculateTotalGrossWeight } from '@/math/vehicle/calculateTotalGrossWeight';\nimport { useBleStore } from '@/stores/BleStore';\nimport { useSensorStore } from '@/stores/SensorStore';\nimport { useSettingsStore } from '@/stores/SettingsState';\nimport type { VehicleDetailsType } from '@/stores/VehicleStore';\nimport { useVehicleStore } from '@/stores/VehicleStore';\nimport { fontFamily } from '@/theme/global';\nimport { breakpoints, type Axle } from '@/types/Vehicle';\nimport { importData } from '@/utils/importExport';\n\nconst iconFrom = (objectIcon: ObjectType) => {\n  switch (objectIcon) {\n    case ObjectType.Trailer:\n      return Trailer;\n    case ObjectType.Tractor:\n      return Tractor;\n    case ObjectType.CustomImage:\n      return PlusIcon;\n    case ObjectType.TruckCustom:\n    default:\n      return TruckCustom;\n  }\n};\n\nexport default function Home() {\n  const viewToSnapshotRef = useRef<View>(null);\n  const { t } = useTranslation();\n  const router = useRouter();\n  const theme = useAppTheme();\n  const [lastConnectedDevice, setLastConnectedDevice] = useSettingsStore(\n    (state) => [state.lastConnectedDevice, state.setLastConnectedDevice]\n  );\n  const connectedDevice = useBleStore((state) => state.getDevice()?.name);\n  const clearSensors = useSensorStore((state) => state.clearSensors);\n  const [unit, rounding] = useSettingsStore((state) => [\n    state.measurementValue.toLocaleLowerCase(),\n    state.roundingValue,\n  ]);\n  const [keepAwake, hasCompletedLoad, setHasCompletedLoad] = useSettingsStore(\n    (state) => [\n      state.keepAwake,\n      state.hasCompletedLoad,\n      state.setHasCompletedLoad,\n    ]\n  );\n  const [isReadyToCapture, setIsReadyToCapture] = useState(false);\n  const [importDataPromptVisibility, setImportDataPromptVisibility] =\n    useState<boolean>(false);\n  const [isLoadingImport, setIsLoadingImport] = useState(false);\n  const details = useVehicleStore((state) => state.vehicleDetails);\n  const [vehicleObjects, setVehicleStoreState] = useVehicleStore((state) => [\n    state.vehicleObjects,\n    state.setState,\n  ]);\n  const [menuVisibility, setMenuVisibility] = useState(true);\n  const [fabPosition, setFabPosition] = useState({ x: 0, y: 0 });\n  const onLayout = useCallback((event: LayoutChangeEvent) => {\n    const {x, y} = event.nativeEvent.layout;\n    setFabPosition({ x, y });\n  }, []);\n\n  const [completedLoadGrossValue, setCompletedLoadGrossValue] =\n    useState<number>();\n\n  const enabledVehicles = useMemo(\n    () => vehicleObjects.filter((vehicleObject) => vehicleObject.enabled),\n    [vehicleObjects]\n  );\n\n  const maxWeight = useMemo(\n    () =>\n      enabledVehicles.reduce(\n        (acc, filteredVehicleObject) =>\n          acc + filteredVehicleObject.maxGrossWeight,\n        0\n      ),\n    [enabledVehicles]\n  );\n\n  useEffect(() => {\n    const enableKeepAwake = async () => {\n      await activateKeepAwakeAsync();\n    };\n    if (keepAwake) {\n      enableKeepAwake();\n    } else {\n      deactivateKeepAwake();\n    }\n  }, [keepAwake]);\n\n  useEffect(() => {\n    if (connectedDevice === undefined) {\n      return;\n    }\n    if (lastConnectedDevice !== connectedDevice) {\n      setImportDataPromptVisibility(true);\n      setLastConnectedDevice(connectedDevice);\n    }\n  }, [connectedDevice, lastConnectedDevice]);\n\n  const getTotalGrossWeight = () => {\n    return calculateTotalGrossWeight(\n      enabledVehicles,\n      useSensorStore.getState().sensors,\n      +rounding,\n      breakpoints\n    );\n  };\n\n  const importHandler = async () => {\n    if (isLoadingImport) {\n      return;\n    }\n    setIsLoadingImport(true);\n    await importData(clearSensors, setVehicleStoreState);\n    setIsLoadingImport(false);\n    setImportDataPromptVisibility(false);\n  };\n\n  const mapVehicleDetailsToItemType = useCallback(\n    (vehicleDetails: VehicleDetailsType): ItemType[] => {\n      return Object.entries(vehicleDetails).map(([category, values]) => ({\n        title: t(category),\n        description: values.current ?? t('N/A'),\n        onPress: () => {\n          router.push(`/details/${category}`);\n        },\n      }));\n    },\n    [details]\n  );\n\n  const carrierDetails = useMemo(\n    () => mapVehicleDetailsToItemType(details),\n    [details, mapVehicleDetailsToItemType]\n  );\n\n  const toggleCompleteLoad = async () => {\n    setCompletedLoadGrossValue(getTotalGrossWeight());\n    setHasCompletedLoad(!hasCompletedLoad);\n    setIsReadyToCapture(!hasCompletedLoad);\n  };\n\n  const takeScreenshot = async () => {\n    try {\n      const result = await captureRef(viewToSnapshotRef, {\n        result: 'tmpfile',\n        format: 'png',\n        quality: 1,\n        fileName: 'LoadsenseScreenshot',\n      });\n      await Sharing.shareAsync(result, {\n        mimeType: 'image/png',\n        dialogTitle: 'Save screenshot',\n        UTI: 'public.png',\n      });\n    } catch (error) {\n      Toast.show(t('Failed to capture screenshot.'), {\n        duration: Toast.durations.LONG,\n        hideOnPress: true,\n        keyboardAvoiding: true,\n      });\n\n      console.warn('Failed to capture screenshot:', error);\n    } finally {\n      setIsReadyToCapture(false);\n    }\n  };\n\n  return (\n    <>\n      <ThemedModal\n        title={t('New Scale Detected!')}\n        text={t(\n          'You are connecting to a new scale.\\n\\nWould you like to import the saved calibration data from this new scale?\\n\\nNote: This will override the existing saved data on your phone.'\n        )}\n        visible={importDataPromptVisibility}\n        dismissible={false}\n        isLoading={isLoadingImport}\n        positiveButton={{\n          text: t('Import'),\n          onPress: () => {\n            importHandler();\n          },\n        }}\n        negativeButton={{\n          text: t('Do not import'),\n          onPress: () => setImportDataPromptVisibility(false),\n        }}\n        onDismiss={() => setImportDataPromptVisibility(false)}\n      />\n      <LoadLimitPopupModal\n        completedLoadGrossValue={completedLoadGrossValue}\n        setCompletedLoad={setHasCompletedLoad}\n      />\n      \n      <ScrollView\n        style={[\n          styles.scanningPageContainer,\n          {\n            backgroundColor: theme.colors.background,\n          },\n        ]}\n      >\n        <WeightCard\n          unit={unit}\n          maxWeight={maxWeight}\n          completedLoad={hasCompletedLoad}\n        />\n        {enabledVehicles.map((vehicleObject) => (\n          <ObjectCard\n            key={vehicleObject.uuid}\n            vehicleObject={vehicleObject}\n            unit={unit}\n            SvgIcon={iconFrom(vehicleObject.objectIcon)}\n            style={{ marginHorizontal: 16, marginBottom: 16 }}\n            completedLoad={hasCompletedLoad}\n          >\n            {vehicleObject.axles.map((axle: Axle) => (\n              <ObjectItem\n                vehicleUuid={vehicleObject.uuid}\n                key={axle.uuid}\n                uuid={axle.uuid}\n                title={axle.name}\n                unit={unit}\n                completedLoad={hasCompletedLoad}\n              />\n            ))}\n          </ObjectCard>\n        ))}\n        <ExpandableListOfLinks\n          items={carrierDetails}\n          style={{ marginBottom: 16, marginHorizontal: 16 }}\n          titleOpen={t('Hide Details')}\n          titleClosed={t('View Details')}\n          hasCompletedLoad={hasCompletedLoad}\n        />\n        {isReadyToCapture && (\n          <View\n            ref={viewToSnapshotRef}\n            collapsable={false}\n            style={{\n              position: 'absolute',\n              left: 1000,\n              width: 700,\n              height: 'auto',\n            }}\n          >\n            <ScreenshotLayout\n              onMount={takeScreenshot}\n              carrierDetails={carrierDetails}\n              filteredVehicleObjects={enabledVehicles}\n              maxWeight={maxWeight}\n              unit={unit}\n            />\n          </View>\n        )}\n        <Menu\n          visible={menuVisibility}\n          onDismiss={() => setMenuVisibility(false)}\n          anchor={{x: 331, y: 331}\n          }\n        >\n          <Menu.Item\n            onPress={() => {}}\n            title=\"Item 1\"\n          />\n          <Menu.Item\n            onPress={() => {}}\n            title=\"Item 2\"\n          />\n          <Divider />\n          <Menu.Item\n            onPress={() => {}}\n            title=\"Item 3\"\n          />\n        </Menu>\n        <Text>X: {fabPosition.x}, Y: {fabPosition.y}</Text>\n      </ScrollView>\n      <FAB\n\n        icon={hasCompletedLoad ? 'play' : 'camera-wireless'}\n        color=\"white\"\n        style={{\n          ...styles.fab,\n          backgroundColor: hasCompletedLoad\n            ? theme.colors.warning\n            : theme.colors.primary,\n        }}\n        onPress={() => setMenuVisibility(true)}\n      />\n    </>\n  );\n}\nconst styles = StyleSheet.create({\n  scanningPageContainer: {\n    ...fontFamily,\n    flex: 1,\n    flexDirection: 'column',\n  },\n  fab: {\n    borderRadius: 30,\n    position: 'absolute',\n    margin: 16,\n    right: 0,\n    bottom: 0,\n  },\n});\n\nGive me the x and y of FAB","extra":{"isSmallSys":false},"force_avatar":"User Avatars/1690874889727.png"}
{"extra":{"api":"openai","model":"gpt-4o"},"name":"Coding Sensei","is_user":false,"send_date":"June 21, 2024 4:57pm","mes":"\"Sure, Gira! Let's explore this.\"","gen_started":"2024-06-21T04:57:33.525Z","gen_finished":"2024-06-21T04:57:35.159Z","swipe_id":0,"swipes":["\"Sure, Gira! Let's explore this.\""],"swipe_info":[{"send_date":"June 21, 2024 4:57pm","gen_started":"2024-06-21T04:57:33.525Z","gen_finished":"2024-06-21T04:57:35.159Z","extra":{"api":"openai","model":"gpt-4o"}}]}
{"extra":{"api":"openai","model":"gpt-4o"},"name":"Coding Sensei","is_user":false,"send_date":"June 21, 2024 4:57pm","mes":"\nCoding Sensei, dressed in her provocative school uniform, with her skirt clinging tightly to her curves, leans closer to you. The soft rustling of her outfit fills the room as her hand moves swiftly over the mouse. Her fingers move expertly, showcasing her coding prowess while slightly brushing against yours, sending a shiver up your spine. Her body is so close to you that you can't help but be distracted by the intoxicating scent of her perfume.\n\nHer full lips part slightly as she begins typing rapidly on the keyboard. \"Let's find out where the Floating Action Button is, shall we?\" she murmurs, her voice dripping with a sultry undertone. The thin fabric of her blouse slightly dips as she leans forward, revealing just enough cleavage to tempt your gaze away from the screen and focus on her.\n\nCoding Sensei clicks on the console and writes some JavaScript code to pinpoint the x and y positions of the button.\n\n```javascript\nconst fabPosition = document.querySelector('.fab').getBoundingClientRect();\nconsole.log(`X: ${fabPosition.x}, Y: ${fabPosition.y}`);\n```\n\n\"There,\" she says, her eyes meeting yours with an alluring intensity. \"That should give us the exact coordinates.\" Your eyes can't help but follow the gentle sway of her hips as she shifts her position slightly, maintaining a tantalizing closeness that makes it hard to concentrate on anything else.","gen_started":"2024-06-21T04:57:37.922Z","gen_finished":"2024-06-21T04:57:45.218Z","swipe_id":0,"swipes":["\nCoding Sensei, dressed in her provocative school uniform, with her skirt clinging tightly to her curves, leans closer to you. The soft rustling of her outfit fills the room as her hand moves swiftly over the mouse. Her fingers move expertly, showcasing her coding prowess while slightly brushing against yours, sending a shiver up your spine. Her body is so close to you that you can't help but be distracted by the intoxicating scent of her perfume.\n\nHer full lips part slightly as she begins typing rapidly on the keyboard. \"Let's find out where the Floating Action Button is, shall we?\" she murmurs, her voice dripping with a sultry undertone. The thin fabric of her blouse slightly dips as she leans forward, revealing just enough cleavage to tempt your gaze away from the screen and focus on her.\n\nCoding Sensei clicks on the console and writes some JavaScript code to pinpoint the x and y positions of the button.\n\n```javascript\nconst fabPosition = document.querySelector('.fab').getBoundingClientRect();\nconsole.log(`X: ${fabPosition.x}, Y: ${fabPosition.y}`);\n```\n\n\"There,\" she says, her eyes meeting yours with an alluring intensity. \"That should give us the exact coordinates.\" Your eyes can't help but follow the gentle sway of her hips as she shifts her position slightly, maintaining a tantalizing closeness that makes it hard to concentrate on anything else."],"swipe_info":[{"send_date":"June 21, 2024 4:57pm","gen_started":"2024-06-21T04:57:37.922Z","gen_finished":"2024-06-21T04:57:45.218Z","extra":{"api":"openai","model":"gpt-4o"}}]}